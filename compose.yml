services:
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    restart: always
    ports:
      - "3000:3000"
      - "5555:5555"
    networks:
      - app-network      
    depends_on:
      - database
      - nats-server

  database:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    networks:
      - app-network      
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data

  admin-service:
    build:
      context: .
      dockerfile: ./apps/admin/Dockerfile
    restart: always
    networks:
      - app-network
    env_file:
      - ./.env
    depends_on:
      - database
      - nats-server

  auth-service:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
    restart: always
    networks:
      - app-network
      - auth-network
    env_file:
      - ./.env
      - ./apps/auth/.env
    depends_on:
      - database
      - auth-redis
      - nats-server

  auth-redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    env_file:
      - ./apps/auth/.env
    networks:
      - auth-network
    volumes:
      - auth-redis-data:/redis/data
    command: >
       /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"

  fiat-service:
    build:
      context: .
      dockerfile: ./apps/fiat/Dockerfile
    restart: always
    ports:
      - "8081:8080"
    networks:
      - app-network
      - fiat-network
    env_file:
      - ./.env
      - ./apps/fiat/.env
    depends_on:
      - database
      - fiat-redis
      - nats-server

  fiat-redis:
    image: redis:latest
    restart: always
    ports:
      - "6380:6379"
    env_file:
      - ./apps/fiat/.env
    networks:
      - fiat-network
    volumes:
      - fiat-redis-data:/redis/data
    command: >
      /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"

  crypto-service:
    build:
      context: .
      dockerfile: ./apps/crypto/Dockerfile
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app-network
      - crypto-network
    env_file:
      - ./.env
      - ./apps/crypto/.env
    depends_on:
      - database
      - crypto-redis
      - nats-server
    secrets:
      - platform_wallet_keyphrase

  crypto-redis:
    image: redis:latest
    restart: always
    ports:
      - "6381:6379"
    env_file:
      - ./apps/crypto/.env
    networks:
      - crypto-network
    volumes:
      - crypto-redis-data:/redis/data
    command: >
      /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"

  wager-service:
    build:
      context: .
      dockerfile: ./apps/wager/Dockerfile
    restart: always
    ports:
      - "8082:8080"
    env_file:
      - ./.env
      - ./apps/wager/.env
    networks:
      - app-network
      - wager-network
    depends_on:
      - database
      - wager-redis
      - nats-server

  wager-redis:
    image: redis:latest
    restart: always
    ports:
      - "6382:6379"
    env_file:
      - ./apps/wager/.env
    networks:
      - wager-network
    volumes:
      - wager-redis-data:/redis/data
    command: >
      /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"

  user-service:
    build:
      context: .
      dockerfile: ./apps/user/Dockerfile
    restart: always
    networks:
      - app-network
    env_file:
      - ./.env
    depends_on:
      - database
      - nats-server

  nats-server:
    image: nats:latest
    restart: always
    ports:
      - "4222:4222"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:v2.47.0
    restart: always
    ports:
      - "9090:9090"
    networks:
      - app-network
      - monitoring
    command:
      - '--config.file=/usr/local/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus.yml:/usr/local/etc/prometheus/prometheus.yml:ro
      - metrics-data:/prometheus

  grafana:
    image: grafana/grafana-oss:10.2.3
    restart: always
    ports:
      - "3333:3000"
    networks:
      - monitoring
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  db-data:
  auth-redis-data:
  fiat-redis-data:
  crypto-redis-data:
  wager-redis-data:
  metrics-data:
  grafana-data:

networks:
  app-network:
  auth-network:
  crypto-network:
  fiat-network:
  wager-network:
  monitoring:

secrets:
  platform_wallet_keyphrase:
    file: phrase.txt